/** 
What are Hooks?
Hooks are new feature addition to version of React 16.8 which allow you to use React features without having to write a class.
Hooks don't work inside the class.

Why Hooks?
Reason 1:
  Understand how this keyword works in Javascript.
  Remember to bind even handlers in class components.
  Classes don't minify very well and make hot reloading very unreliable.

Reason 2:
  There is no particular way to reuse stateful component logic.
  HOC and render pattern do address this problem but need to restructure the code. Ending up with several other components to share functionality.
  There is a need to share stateful logic in a better way. 

Reason 3:
  Create component for complex scenarios such as data fetching and subscribing to events, related code is not organized in one organized place. It's scattered.
  e.g. 
    Data Fetching - componentDidMount and componentDidUpdate
    Event Listeners - componentDidMount and componentWillUnmount

Summary - useState:
  The useState hooks lets you add state to functional component.
  In classes, the state is always an object.
  With the useState hook, the state doesn't have to be an object.
  The useState hook returns an array with 2 elements.
  The first element is the current value of the state, and the second element is a state setter function.
  When dealing with objects or arrays, always make sure to spread your state variable and then call the setter function.

  */